services:
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: classroom-npm
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'  # Admin panel
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    environment:
      - DB_MYSQL_HOST=npm-db
      - DB_MYSQL_PORT=3306
      - DB_MYSQL_USER=npm
      - DB_MYSQL_PASSWORD=npm_password
      - DB_MYSQL_NAME=npm
    depends_on:
      - npm-db

  npm-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: classroom-npm-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=npm_root_password
      - MYSQL_DATABASE=npm
      - MYSQL_USER=npm
      - MYSQL_PASSWORD=npm_password
    volumes:
      - npm_mysql_data:/var/lib/mysql

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: classroom-api
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=myclassroomdb
      - DB_USER=avnadmin
      - DB_PASSWORD=yourpassword
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_EXTERNAL_ENDPOINT=https://minio.classroom.set4.me
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadminpassword
      - JWT_SECRET=your-production-jwt-secret-change-this
      - JWT_EXPIRATION=1h
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    expose:
      - "3000"

  frontend:
    image: nginx:alpine
    container_name: classroom-frontend
    volumes:
      - ../Frontend/dist:/usr/share/nginx/html
      - ./nginx-simple/frontend.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    expose:
      - "80"

  db:
    image: postgres:13
    container_name: classroom-db
    environment:
      POSTGRES_USER: avnadmin
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: myclassroomdb
      TZ: 'GMT+5:30'
      PGTZ: 'GMT+5:30'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../db-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U avnadmin -d myclassroomdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    image: quay.io/minio/minio
    container_name: classroom-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadminpassword
    command: server /data --console-address ":9090"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    expose:
      - "9000"
      - "9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  minio-init:
    image: quay.io/minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadminpassword;
      /usr/bin/mc mb myminio/classroom-uploads --ignore-existing;
      /usr/bin/mc policy set private myminio/classroom-uploads;
      echo 'MinIO bucket setup completed';
      exit 0;
      "

volumes:
  postgres_data:
  minio_data:
  npm_data:
  npm_letsencrypt:
  npm_mysql_data:
